import { r, s, p, _ as __decorate, a as i, e, n, l } from './Theme.js';
import './index.js';
import { o as openOverlay } from './sp-toast.js';
import './sp-sidenav-item.js';

const styles$1 = r`:host{display:block}sp-search{--spectrum-alias-single-line-width:100%;width:100%}#search-container sp-popover{display:none}`;

const stopPropagation=event=>event.stopPropagation();let SearchComponent=class SearchComponent extends s{constructor(){super(...arguments);this.searchResultsPopover=null;this.results=[];}static get styles(){return [styles$1];}focus(){this.searchField.focus();}handleSearchInput(event){if(event.target){const{value}=event.target;this.updateSearchResults(value);}}handleKeydown(event){const{code,shiftKey}=event;const willFocusResultsList=!shiftKey&&code==='Tab';const shouldFocusResultsList=code==='ArrowDown'||code==='ArrowUp';const focusResultsList=willFocusResultsList||shouldFocusResultsList;if(!focusResultsList){return;}if(shouldFocusResultsList){event.preventDefault();}this.focusResults({shouldFocusResultsList});}handlePopoverKeydown(event){const{code,shiftKey}=event;if(code==='Tab'){if(shiftKey){this.focusReturn.focus();}else {this.focus();}}}async focusResults({shouldFocusResultsList}){await this.updateComplete;if(this.searchResultsPopover){if(shouldFocusResultsList){const popoverMenu=this.searchResultsPopover.querySelector('sp-menu');popoverMenu.focus();}else {this.searchResultsPopover.focus();}}else if(shouldFocusResultsList){const resultsAvailable=await this.updateSearchResults(this.searchField.value);if(resultsAvailable){this.focusResults({shouldFocusResultsList});}}}async openPopover(){if(!this.popover)return;this.searchResultsPopover=this.popover;const{popover}=this;this.closeOverlay=await openOverlay(this.searchField,'click',popover,{placement:'bottom'});await this.searchResultsPopover.updateComplete;}closePopover(){if(this.closeOverlay){this.closeOverlay();}}handleClosed(){this.searchResultsPopover=null;if(this.closeOverlay){delete this.closeOverlay;}}handleSubmit(event){event.preventDefault();if(this.results.length<0||!this.searchResultsPopover)return;const popoverMenu=this.searchResultsPopover.querySelector('sp-menu');popoverMenu.focus();}async updateSearchResults(value){if(value.length<3){this.closePopover();return false;}const searchParam=`${value.trim()}*`;const search=await import('./search-index.js').then(({search})=>search);this.results=await search(searchParam);await this.openPopover();return this.results.length>0;}onFocusout(event){const relatedTarget=event.relatedTarget;if(relatedTarget&&this.searchResultsPopover&&this.shadowRoot&&!this.shadowRoot.contains(relatedTarget)&&!this.searchResultsPopover.contains(relatedTarget)){this.closePopover();}}renderResults(){if(this.results.length>0){return p`<sp-menu>${this.results.map(category=>p`<sp-menu-group><span slot="header">${category.name}</span> ${category.results.map(result=>p`<sp-menu-item href="${result.url}">${result.label}</sp-menu-item>`)}</sp-menu-group>`)}</sp-menu>`;}else {return p`<sp-illustrated-message heading="No results found" description="Try another search term."></sp-illustrated-message>`;}}render(){return p`<div id="search-container" @focusout="${this.onFocusout}"><sp-search id="search" @focusin="${this.handleSearchInput}" @input="${this.handleSearchInput}" @change="${this.handleSearchInput}" @keydown="${this.handleKeydown}" @click="${stopPropagation}" @submit="${this.handleSubmit}" autocomplete="off"></sp-search><sp-popover id="search-results-menu" open tabindex="0" @sp-overlay-closed="${this.handleClosed}" @keydown="${this.handlePopoverKeydown}"><style>#search-results-menu{width:368px;max-height:calc(100vh - 200px);margin-left:24px;display:flex;flex-direction:column}sp-illustrated-message{flex:1 1;margin-bottom:2em;color:var(--spectrum-global-color-gray-800)}</style>${this.renderResults()}</sp-popover><span id="focus-return" tabindex="-1"></span></div>`;}};__decorate([i('sp-popover')],SearchComponent.prototype,"popover",void 0);__decorate([i('sp-search')],SearchComponent.prototype,"searchField",void 0);__decorate([i('#focus-return')],SearchComponent.prototype,"focusReturn",void 0);__decorate([e({type:Array})],SearchComponent.prototype,"results",void 0);SearchComponent=__decorate([n('docs-search')],SearchComponent);

const styles = r`::slotted(*){width:100%}aside{background-color:var(--spectrum-global-color-gray-75);display:flex;flex-direction:column;height:100vh;left:0;max-height:100vh;overflow:auto;position:sticky;top:0}@media screen and (max-width:960px){aside{left:0;min-height:100vh;position:fixed;top:0;transform:translateX(-100%);transition:transform var(--spectrum-dialog-confirm-background-entry-animation-duration,var(--spectrum-global-animation-duration-600)) cubic-bezier(0,0,.4,1);z-index:10}:host([open]) aside{transform:translateX(0)}.scrim{touch-action:none;z-index:10}}#nav-header a,#nav-header a:visited{color:var(--spectrum-global-color-gray-800);text-decoration:none}.navigation{flex:1;flex-grow:1;overflow:auto;overflow-x:hidden;overflow-y:auto;padding:0 24px 24px;width:var(--spectrum-global-dimension-size-2400)}docs-spectrum-logo{display:block;height:32px;padding-top:7px;width:36px}:host([dir=ltr]) docs-spectrum-logo{margin-right:16px}:host([dir=rtl]) docs-spectrum-logo{margin-left:16px}#logo-container{border-radius:4px;outline:none}docs-search{padding:0 var(--spectrum-global-dimension-size-300) var(--spectrum-global-dimension-size-300) var(--spectrum-global-dimension-size-300);width:var(--spectrum-global-dimension-size-2400)}sp-sidenav{width:100%}.spectrum-web{display:block;margin-top:80px}sp-underlay:not(:defined){opacity:0}`;

let SideNav=class SideNav extends s{constructor(){super(...arguments);this.open=false;}static get styles(){return [styles];}toggle(){this.open=!this.open;}focus(){const target=document.querySelector('[slot="logo"]');if(!target){this.shadowRoot.querySelector('#logo').focus();return;}target.focus();}render(){return p`<sp-underlay class="scrim" @click="${this.toggle}" ?open="${this.open}"></sp-underlay><aside><div id="nav-header"><div id="logo-container"><slot name="logo"></slot></div><docs-search tabindex="${l(!this.open?-1:undefined)}"></docs-search></div><div class="navigation"><slot></slot></div></aside>`;}updated(changes){if(changes.has('open')&&!this.open&&changes.get('open')){this.dispatchEvent(new Event('close'));}}};__decorate([e({type:Boolean,reflect:true})],SideNav.prototype,"open",void 0);SideNav=__decorate([n('docs-side-nav')],SideNav);

export { SideNav };
//# sourceMappingURL=side-nav.js.map
